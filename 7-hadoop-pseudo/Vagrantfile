# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/bionic64"
  config.vm.hostname = "bionic"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.32.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    vb.name = "bionic"
    vb.memory = 2048
    vb.cpus = 2
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: 'apt update && apt install -y openjdk-8-jre-headless'
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    echo 'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64' >> /home/vagrant/.bashrc
    wget https://www-us.apache.org/dist/hadoop/common/hadoop-2.9.2/hadoop-2.9.2.tar.gz
    tar -xvf hadoop-2.9.2.tar.gz
    rm hadoop-2.9.2.tar.gz
    echo 'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64' >> /home/vagrant/hadoop-2.9.2/etc/hadoop/hadoop-env.sh
    echo 'export PATH=$PATH:/home/vagrant/hadoop-2.9.2/bin' >> /home/vagrant/.bashrc
    echo -e 'Host *\n\tStrictHostKeyChecking no\n' >> /home/vagrant/.ssh/config
    ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa
    cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
    chmod 0600 ~/.ssh/authorized_keys
  SHELL

  config.vm.provision "file", source: "./core-site.xml", destination: "~/hadoop-2.9.2/etc/hadoop/core-site.xml"
  config.vm.provision "file", source: "./hdfs-site.xml", destination: "~/hadoop-2.9.2/etc/hadoop/hdfs-site.xml"
  config.vm.provision "file", source: "./mapred-site.xml", destination: "~/hadoop-2.9.2/etc/hadoop/mapred-site.xml"
  config.vm.provision "file", source: "./yarn-site.xml", destination: "~/hadoop-2.9.2/etc/hadoop/yarn-site.xml"

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    export PATH=$PATH:/home/vagrant/hadoop-2.9.2/bin
    hdfs namenode -format
    bash /home/vagrant/hadoop-2.9.2/sbin/start-dfs.sh
    hdfs dfs -mkdir /user
    hdfs dfs -mkdir /user/vagrant
    bash /home/vagrant/hadoop-2.9.2/sbin/start-yarn.sh
  SHELL
end
